{"version":3,"sources":["../src/TestRoute.component.ts"],"names":[],"mappings":"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","file":"TestRoute.component.js","sourceRoot":"","sourcesContent":["import { Input, Output, Component, EventEmitter } from '@angular/core'\nimport { fxArray } from \"./prefx\"\nimport { string as testRoute } from \"./templates/test-route.pug\"\nimport { AckApi } from \"ack-angular\"\nimport * as rjonHelper from \"./rjonHelper\"\n\n export class TestRoute{\n   public route = {}\n   public hosts\n   public spaceSaving:boolean=true\n   public hostModel\n   public hostModelChange = new EventEmitter()\n\n  public rjonHelper = rjonHelper\n  public pathModel\n  public methodModel\n  public loadSample\n  public bodyModel\n  public response\n  public tryingSend\n  public sending:number=0\n  public error\n  public responseView\n  public headers={\n    'Content-Type':'application/json'\n  }\n\n  constructor(public AckApi:AckApi){}\n\n  ngOnInit(){\n    this.pathModel = this.route['path']\n    this.methodModel = this.route['method']\n    this.bodyModel = this.getDefaultBodyModel()\n    this.hostModel = this.getDefaultHostModel()\n    setTimeout(()=>{\n      this.route = this.route || {}\n      this.hostModelChange.emit(this.hostModel)\n    }, 0)\n  }\n\n  getDefaultHostModel(){\n    if(this.hostModel)return this.hostModel\n    \n    if(this.hosts && this.hosts.length){\n      return this.hosts[0]\n    }\n  }\n\n  setHostByIndex(index){\n    this.hostModel = this.hosts[index]\n    this.hostModelChange.emit(this.hostModel)\n  }\n\n  getDefaultBodyModel(){\n    const firstSample = rjonHelper.defToArray(this.route['sample'])\n    const rtn = this.bodyModel || (firstSample.length&&firstSample[0].request)\n    return rtn ? JSON.stringify(rtn, null, 2) : ''\n  }\n\n  setBodyObject(ob){\n    this.loadSample = null\n    this.bodyModel = JSON.stringify(ob, null, 2)\n  }\n\n  trySend(){\n    this.tryingSend = true\n    this.response = null\n    this.error = null\n\n    if(this.hostModel){\n      this.send()\n    }\n  }\n\n  send(){\n    const port = this.hostModel.port||80\n    const protocol = this.hostModel.hostname.search(/^http(s)?:/)>=0 ? '' : 'http://'\n    const host = protocol+this.hostModel.hostname\n    const route = (this.pathModel.substring(0, 1)=='/' ? '' : '/') + this.pathModel\n    const url = host+':' + port + route\n\n    const config={\n      method:this.methodModel,\n      url:url,\n      body:this.bodyModel,\n      headers:this.headers,\n      promise:'all'\n    }\n\n    ++this.sending\n    this.AckApi.request(config)\n    .then( response=>this.response=response )\n    .catch(e=>console.log(this.error=e))\n    .then(()=>--this.sending)\n    .then(()=>this.responseView='map')\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'test-route',\n  template:testRoute,\n  animations:fxArray\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AckApi, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'route': [{ type: Input },],\n'hosts': [{ type: Input },],\n'spaceSaving': [{ type: Input },],\n'hostModel': [{ type: Input },],\n'hostModelChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}