{"version":3,"sources":["../src/TestRoute.component.ts"],"names":[],"mappings":"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","file":"TestRoute.component.js","sourceRoot":"","sourcesContent":["import { Input, Output, Component, EventEmitter } from '@angular/core'\nimport { fxArray } from \"./prefx\"\nimport { string as testRoute } from \"./templates/test-route.pug\"\nimport { AckApi } from \"ack-angular\"\nimport * as rjonHelper from \"./rjonHelper\"\n\n/** interface to test a single route */\n export class TestRoute{\n   route:any = {}\n   headers\n   hosts\n   spaceSaving:boolean=true\n   hostModel\n   hostModelChange = new EventEmitter()\n   onSave = new EventEmitter()\n\n  lastSave:number\n  headersModel = {'Content-Type':'application/json'}\n  protocolModel\n  contentTypeModel = 'application/json'\n  rjonHelper = rjonHelper\n  pathModel\n  methodModel\n  loadSample\n  bodyModel\n  response\n  tryingSend\n  sending:number=0\n  error\n  responseView\n\n  constructor(public AckApi:AckApi){}\n\n  ngOnInit(){\n    this.pathModel = this.route['path']\n    this.methodModel = this.route['method']\n    this.bodyModel = this.getDefaultBodyModel()\n    this.hostModel = this.getDefaultHostModel()\n    this.applyHostHeaders(this.hostModel)\n    this.applyProtocol()\n\n    if(this.headers)Object.assign(this.headersModel, this.headers)\n    \n    setTimeout(()=>{\n      this.route = this.route || {}\n      this.hostModelChange.emit(this.hostModel)\n    }, 0)\n  }\n\n  setContentType(type){\n    for(let x in this.headersModel){\n      if(this.headersModel[x].name.toLowerCase()=='content-type'){\n        return this.headersModel[x] = type\n      }      \n    }\n    this.headersModel['Content-Type'] = type\n  }\n\n  getDefaultHostModel(){\n    if(this.hostModel)return this.hostModel\n    \n    if(this.hosts && this.hosts.length){\n      return this.hosts[0]\n    }\n  }\n\n  setHostByIndex(index){\n    this.hostModel = this.hosts[index]\n    this.hostModelChange.emit(this.hostModel)\n    this.applyHostHeaders(this.hostModel)\n    if(!this.protocolModel)this.applyProtocol()\n  }\n\n  applyHostHeaders(host){\n    if(host && host.headers){\n      Object.assign(this.headersModel, host.headers)\n    }\n  }\n\n  applyProtocol(){\n    if( !this.hostModel || !this.hostModel.protocol )return;\n    this.protocolModel = this.hostModel.protocol\n  }\n\n  getDefaultBodyModel(){\n    const firstSample = rjonHelper.defToArray(this.route.sample)\n    const rtn = this.bodyModel || (firstSample.length&&firstSample[0].request)\n    return rtn ? JSON.stringify(rtn, null, 2) : ''\n  }\n\n  setBodyObject(ob){\n    this.loadSample = null\n    this.bodyModel = JSON.stringify(ob, null, 2)\n  }\n\n  trySend(){\n    this.tryingSend = true\n    this.response = null\n    this.error = null\n\n    if(this.hostModel){\n      this.send()\n    }\n  }\n\n  getProtocol(){\n    if(this.hostModel.hostname.search(/^http(s)?:/)>=0)return ''\n    return (this.protocolModel || this.hostModel.protocol || (this.hostModel.port==443?'https':'http'))+'://'\n  }\n\n  send(){\n    const port = this.hostModel.port||80\n    const protocol = this.getProtocol()\n    const host = protocol + this.hostModel.hostname\n    const route = (this.pathModel.substring(0, 1)=='/' ? '' : '/') + this.pathModel\n    const url = host+':' + port + route\n\n    const config={\n      method:this.methodModel,\n      url:url,\n      body:this.bodyModel,\n      headers:this.headersModel,\n      promise:'all'\n    }\n\n    ++this.sending\n    this.AckApi.request(config)\n    .then( response=>this.response=response )\n    .catch(e=>console.log(this.error=e))\n    .then(()=>--this.sending)\n    .then(()=>this.responseView='map')\n  }\n\n  save(){\n    this.route.path = this.pathModel\n    this.route.method = this.methodModel\n\nconsole.log('this.pathModel', this.route)\n\n    if(this.bodyModel){\n      this.route.sample = this.route.sample || [{}]\n      this.route.sample[0].body = this.bodyModel\n    }\n\n    this.lastSave = Date.now()\n    this.onSave.emit(this.route)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'test-route',\n  template:testRoute,\n  animations:fxArray\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AckApi, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'route': [{ type: Input },],\n'headers': [{ type: Input },],\n'hosts': [{ type: Input },],\n'spaceSaving': [{ type: Input },],\n'hostModel': [{ type: Input },],\n'hostModelChange': [{ type: Output },],\n'onSave': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}