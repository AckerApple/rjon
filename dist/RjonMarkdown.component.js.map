{"version":3,"file":"RjonMarkdown.component.js","sourceRoot":"","sources":["../src/RjonMarkdown.component.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC,yCAA0C;AAC1C,6CAA2C;AAC3C,mEAAsE;AACtE,sCAAsE;;;;IAiBpE,uCAAgB,GAAhB,UAAiB,IAAI,EAAE,KAAK,EAAE,MAAM;QAClC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;KACxD;IAED,gBAAgB;;IAChB,iCAAU;IAAV,UAAW,MAAM;QACf,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;KACrC;IAED,kCAAW,GAAX,UAAY,KAAK;QACf,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;YAChD,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAE,KAAK,CAAC,CAAA,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;gBACpB,MAAM,CAAA;aACP;SACF;KACF;IAED,iCAAU,GAAV,UAAW,IAAI;QACb,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;YAC/C,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAE,IAAI,CAAC,CAAA,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;gBACpB,MAAM,CAAA;aACP;SACF;KACF;uBAhDH;;AAUgB,oCAAY","sourcesContent":["import { fxArray } from \"./prefx\"\nimport * as rjonHelper from \"./rjonHelper\"\nimport { statIconMap } from \"./statIconMap\"\nimport { string as rjonMarkdown } from \"./templates/rjon-markdown.pug\"\nimport { EventEmitter, Output, Input, Component } from '@angular/core'\n\n@Component({\n  selector:'rjon-markdown',\n  template:rjonMarkdown,\n  animations:fxArray\n}) export class RjonMarkdown{\n  testRoute\n  editRoute\n  editHost\n  host\n  route\n  statIconMap = statIconMap\n\n  @Input() rjon\n  @Output() onChange = new EventEmitter()\n\n  serverUrlByRoute(host, route, sample){\n    return rjonHelper.serverUrlByRoute(host, route, sample)\n  }\n\n  /* deprecated */\n  defToArray(sample){\n    return rjonHelper.defToArray(sample)\n  }\n\n  deleteRoute(route){\n    for(let x=this.rjon.routes.length-1; x >= 0; --x){\n      if(this.rjon.routes[x]==route){\n        this.rjon.routes.splice(x,1)\n        this.onChange.emit()\n        return\n      }\n    }\n  }\n\n  deleteHost(host){\n    for(let x=this.rjon.hosts.length-1; x >= 0; --x){\n      if(this.rjon.hosts[x]==host){\n        this.rjon.hosts.splice(x,1)\n        this.onChange.emit()\n        return\n      }\n    }\n  }\n}"]}