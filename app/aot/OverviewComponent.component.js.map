{"version":3,"sources":["../src/OverviewComponent.component.ts"],"names":[],"mappings":"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","file":"OverviewComponent.component.js","sourceRoot":"","sourcesContent":["import { AckOffline } from \"ack-angular\"\nimport { Component, EventEmitter } from '@angular/core'\nimport { fxArray } from \"./prefx\"\nimport { AppData } from \"./AppData\"\nimport { string as overviewComponent } from \"./templates/overview-component.pug\"\n\n@Component({\n  selector: 'overview-component',\n  template: overviewComponent,\n  animations: fxArray\n}) export class OverviewComponent {\n  //public rjonSaves={}\n  public saveOfflineName\n  public error\n  public mergeError\n  public rjonMerge\n  public viewRjonMerge:boolean\n  public viewRjonMergeResults:boolean\n\n  public compareResults = {\n    add:{hosts:[], routes:[]},\n    drop:{hosts:[], routes:[]}\n  }\n\n  constructor(public AppData:AppData, public AckOffline:AckOffline){}\n\n  loadByOfflineName(name){\n    //this.saveOfflineName = name\n    if(!name)return\n    this.AppData.setRjonString( this.AppData.rjonSaves[name] )\n  }\n\n  setSaveRjonStringAs(string, name){\n    if(!name)return this.AppData.saveOffline(string);\n\n    try{\n      const rjon = JSON.parse(string)\n      rjon.name = name\n      return this.AppData.setSaveRjon(rjon)\n    }catch(e){\n      this.AppData.saveOffline(string)\n    }\n  }\n\n  compareRjon(rjonString){\n    //this.viewRjonMerge = !this.viewRjonMerge\n    if(this.viewRjonMergeResults)return this.viewRjonMergeResults = false\n\n    this.viewRjonMergeResults = true\n\n    try{\n      this.rjonMerge = JSON.parse(rjonString)\n      this.compareResults = this.getRjonCompare(this.AppData.rjon, this.rjonMerge)\n    }catch(e){\n      this.rjonMerge = null\n      this.compareResults = null\n      this.mergeError = e\n    }\n  }\n\n  mergeRjon(rjonString){\n    try{\n      const rjon = JSON.parse(rjonString)\n      const save = this.getRjonMerge(this.AppData.rjon, rjon)\n      this.AppData.setSaveRjon(this.AppData.rjon)\n    }catch(e){\n      console.log('e',e)\n      this.mergeError = e\n    }\n  }\n\n  dedup(){\n    this.AppData.rjon.routes.forEach((route,i)=>{\n      for(let x=this.AppData.rjon.routes.length-1; x >= 0; --x){\n        if(this.AppData.rjon.routes[i] == this.AppData.rjon.routes[x]){\n          continue\n        }\n\n        if(route.path == this.AppData.rjon.routes[x].path){\n          this.AppData.rjon.routes.splice(x,1)\n        }\n      }\n    })\n\n    this.AppData.rjon.hosts.forEach((host,i)=>{\n      for(let x=this.AppData.rjon.hosts.length-1; x >= 0; --x){\n        if(this.AppData.rjon.hosts[i] == this.AppData.rjon.hosts[x]){\n          continue\n        }\n\n        if(host.hostname == this.AppData.rjon.hosts[x].hostname){\n          this.AppData.rjon.hosts.splice(x,1)\n        }\n      }\n    })\n\n    this.AppData.setSaveRjon( this.AppData.rjon )\n  }\n\n  getRjonCompare(rjon0, rjon1){\n    const drop = {routes:[], hosts:[]}\n    const add = {routes:[], hosts:[]}\n\n    if(rjon1.routes && rjon0.routes){\n      rjon1.routes.forEach(route=>{\n        for(let x=rjon0.routes.length-1; x >= 0; --x){\n          if(rjon0.routes[x].path==route.path && rjon0.routes[x].method==route.method){\n            return\n          }\n        }\n        add.routes.push(route)\n      })\n\n      rjon0.routes.forEach(route=>{\n        for(let x=rjon0.routes.length-1; x >= 0; --x){\n          if(rjon1.routes[x].path==route.path && rjon1.routes[x].method==route.method){\n            return\n          }\n        }\n        drop.routes.push(route)\n      })\n    }\n\n    if(rjon1.hosts && rjon0.hosts){\n      rjon1.hosts.forEach(host=>{\n        for(let x=rjon0.hosts.length-1; x >= 0; --x){\n          if(rjon0.hosts[x].hostname==host.hostname){\n            return\n          }\n        }\n        add.hosts.push(host)\n      })\n      \n      rjon0.hosts.forEach(host=>{\n        for(let x=rjon1.hosts.length-1; x >= 0; --x){\n          if(rjon1.hosts[x].hostname==host.hostname){\n            return\n          }\n        }\n        drop.hosts.push(host)\n      })\n    }\n\n    return { add, drop }\n  }\n\n  getRjonMerge(rjon0, rjon1){\n    rjon1.routes.forEach(route=>{\n      for(let x=rjon0.routes.length-1; x >= 0; --x){\n        if(route.path==route.pathj){\n          return Object.assign(rjon0.routes[x], route)\n        }\n      }\n      rjon0.routes.push(route)\n    })\n\n    rjon1.hosts.forEach(host=>{\n      for(let x=rjon0.hosts.length-1; x >= 0; --x){\n        if(host.hostname==host.hostnamej){\n          return Object.assign(rjon0.hosts[x], host)\n        }\n      }\n      rjon0.hosts.push(host)\n    })\n\n    return rjon0\n  }\n}\n"]}