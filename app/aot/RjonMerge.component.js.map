{"version":3,"sources":["../src/RjonMerge.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAgD;AAChD,iCAAwB;AACxB,qCAAwB;AACxB,6DAAoC;AACpC,uDAAsB;AAMnB,IAAa,SAAS;IAWvB,mBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QAV3B,cAAS,GAAG,EAAE,CAAA;QAGd,mBAAc,GAAG;YACtB,GAAG,EAAC,EAAC,KAAK,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAC;YACzB,IAAI,EAAC,EAAC,KAAK,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAC;SAC3B,CAAA;QAEgB,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAA;IAET,CAAC;IAErC,+BAAW,GAAX,UAAY,UAAU;QACpB,0CAA0C;QAC1C,EAAE,CAAA,CAAC,IAAI,CAAC,oBAAoB,CAAC;YAAA,MAAM,CAAC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAA;QAErE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAA;QAEhC,IAAG,CAAC;YACF,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAC,GAAG,CAAC,CAAA;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;YACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;QAC9E,CAAC;QAAA,KAAK,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC;YACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA;YAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA;YACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QAChB,CAAC;IACH,CAAC;IAED,6BAAS,GAAT,UAAU,UAAU;QAClB,IAAG,CAAC;YACF,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,EAAC,GAAG,CAAC,CAAA;YAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;YACnC,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YACvD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC7C,CAAC;QAAA,KAAK,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACd,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA;QACrB,CAAC;IACH,CAAC;IAED,kCAAc,GAAd,UAAe,KAAK,EAAE,KAAK;QACzB,IAAM,IAAI,GAAG,EAAC,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC,CAAA;QAClC,IAAM,GAAG,GAAG,EAAC,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC,CAAA;QAEjC,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAA,CAAC;YAC/B,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACxB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;oBACzC,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAC;wBAC3E,MAAM,CAAA;oBACR,CAAC;gBACH,CAAC;gBACD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACxB,CAAC,CAAC,CAAA;YAEF,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACxB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;oBACzC,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAC;wBAC3E,MAAM,CAAA;oBACR,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACzB,CAAC,CAAC,CAAA;QACJ,CAAC;QAED,EAAE,CAAA,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC;YAC7B,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBACtB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;oBACxC,EAAE,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;wBACzC,MAAM,CAAA;oBACR,CAAC;gBACH,CAAC;gBACD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACtB,CAAC,CAAC,CAAA;YAEF,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBACtB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;oBACxC,EAAE,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;wBACzC,MAAM,CAAA;oBACR,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACvB,CAAC,CAAC,CAAA;QACJ,CAAC;QAED,MAAM,CAAC,EAAE,GAAG,KAAA,EAAE,IAAI,MAAA,EAAE,CAAA;IACtB,CAAC;IAED,+BAAW,GAAX,UAAY,MAAM,EAAE,MAAM;QACxB,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAA,CAAC;YACjC,IAAM,YAAY,GAAG,mBAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YACzC,IAAM,YAAY,GAAG,mBAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAEzC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,YAAY,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;gBAC5C,EAAE,CAAA,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;oBAAA,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;gBAEhD,EAAE,CAAA,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,CAAC;oBAC/C,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;gBAC3D,CAAC;gBAED,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;YACjD,CAAC;YAED,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;QAC/B,CAAC;QAAA,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,CAAC;YACtB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;QAC/B,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC/B,CAAC;IAED,gCAAY,GAAZ,UAAa,KAAK,EAAE,KAAK;QAAzB,iBAoBC;QAnBC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;YACxB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;gBACzC,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAE,KAAK,CAAC,MAAM,CAAC,CAAA,CAAC;oBAC3E,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;gBACjD,CAAC;YACH,CAAC;YACD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC1B,CAAC,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACtB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;gBACxC,EAAE,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;oBACzC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBAC5C,CAAC;YACH,CAAC;YACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACxB,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,KAAK,CAAA;IACd,CAAC;IAED,6BAAS,GAAT,UAAU,KAAK;QACb,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;YACxD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACxC,EAAE,CAAA,CAAC,KAAK,IAAE,MAAM,CAAC,CAAA,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;YAC7C,CAAC;QACH,CAAC;IACH,CAAC;IAED,yBAAK,GAAL;QAAA,iBA0BC;QAzBC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAC,CAAC;YACvC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;gBACrD,EAAE,CAAA,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;oBAC7D,QAAQ,CAAA;gBACV,CAAC;gBAED,EAAE,CAAA,CAAC,KAAK,CAAC,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,CAAC;oBACjD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAC,CAAC;YACrC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC,CAAC;gBACpD,EAAE,CAAA,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;oBAC3D,QAAQ,CAAA;gBACV,CAAC;gBAED,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,CAAC;oBACvD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,CAAA;IAC/C,CAAC;IACH,gBAAC;AAAD,CA3KG,AA2KF,IAAA;AAlKW;IAAT,aAAM,EAAE;;0CAAoC;AAT/B,SAAS;IAJxB,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,uBAAS;QACnB,UAAU,EAAE,eAAO;KACpB,CAAC;qCAW2B,iBAAO;GAXpB,SAAS,CA2KxB;AA3Ke,8BAAS","file":"RjonMerge.component.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core'\nimport { fxArray } from \"./prefx\"\nimport { AppData } from \"./AppData\"\nimport { string as rjonMerge } from \"./templates/rjon-merge.pug\"\nimport { array } from \"ack-angular/pipes.class\"\n\n@Component({\n  selector: 'rjon-merge',\n  template: rjonMerge,\n  animations: fxArray\n}) export class RjonMerge {\n  public rjonMerge = {}\n  public viewRjonMergeResults:boolean\n  public mergeError\n  public compareResults = {\n    add:{hosts:[], routes:[]},\n    drop:{hosts:[], routes:[]}\n  }\n\n  @Output() public onMerge = new EventEmitter()\n\n  constructor(public AppData:AppData){}\n\n  compareRjon(rjonString){\n    //this.viewRjonMerge = !this.viewRjonMerge\n    if(this.viewRjonMergeResults)return this.viewRjonMergeResults = false\n\n    this.viewRjonMergeResults = true\n\n    try{\n      rjonString = rjonString.replace(/\\u003d/g,'&')\n      this.rjonMerge = JSON.parse(rjonString)\n      this.compareResults = this.getRjonCompare(this.AppData.rjon, this.rjonMerge)\n    }catch(e){\n      this.rjonMerge = null\n      this.compareResults = null\n      this.mergeError = e\n      console.log(e)\n    }\n  }\n\n  mergeRjon(rjonString){\n    try{\n      rjonString = rjonString.replace(/\\u003d/g,'&')\n      const rjon = JSON.parse(rjonString)\n      const save = this.getRjonMerge(this.AppData.rjon, rjon)\n      this.AppData.setSaveRjon(this.AppData.rjon)\n    }catch(e){\n      console.log(e)\n      this.mergeError = e\n    }\n  }\n\n  getRjonCompare(rjon0, rjon1){\n    const drop = {routes:[], hosts:[]}\n    const add = {routes:[], hosts:[]}\n\n    if(rjon1.routes && rjon0.routes){\n      rjon1.routes.forEach(route=>{\n        for(let x=0; x < rjon0.routes.length; ++x){\n          if(rjon0.routes[x].path==route.path && rjon0.routes[x].method==route.method){\n            return\n          }\n        }\n        add.routes.push(route)\n      })\n\n      rjon0.routes.forEach(route=>{\n        for(let x=0; x < rjon1.routes.length; ++x){\n          if(rjon1.routes[x].path==route.path && rjon1.routes[x].method==route.method){\n            return\n          }\n        }\n        drop.routes.push(route)\n      })\n    }\n\n    if(rjon1.hosts && rjon0.hosts){\n      rjon1.hosts.forEach(host=>{\n        for(let x=0; x < rjon0.hosts.length; ++x){\n          if(rjon0.hosts[x].hostname==host.hostname){\n            return\n          }\n        }\n        add.hosts.push(host)\n      })\n      \n      rjon0.hosts.forEach(host=>{\n        for(let x=0; x < rjon1.hosts.length; ++x){\n          if(rjon1.hosts[x].hostname==host.hostname){\n            return\n          }\n        }\n        drop.hosts.push(host)\n      })\n    }\n\n    return { add, drop }\n  }\n\n  mergeRoutes(route0, route1){\n    if(route1.sample && route0.sample){\n      const sample0Array = array(route0.sample)\n      const sample1Array = array(route1.sample)\n      \n      for(let x=sample1Array.length-1; x >= 0; --x){\n        if(sample0Array.length < x)sample0Array.push({})\n\n        if(sample0Array[x].test && sample1Array[x].test){\n          Object.assign(sample1Array[x].test, sample0Array[x].test)\n        }\n        \n        Object.assign(sample1Array[x], sample0Array[x])\n      }\n\n      route1.sample = route0.sample\n    }else if(route0.sample){\n      route1.sample = route0.sample\n    }\n\n    Object.assign(route0, route1)\n  }\n\n  getRjonMerge(rjon0, rjon1){\n    rjon1.routes.forEach(route=>{\n      for(let x=0; x < rjon0.routes.length; ++x){\n        if(rjon0.routes[x].path==route.path && rjon0.routes[x].method==route.method){\n          return this.mergeRoutes(rjon0.routes[x], route)\n        }\n      }\n      rjon0.routes.push(route)\n    })\n\n    rjon1.hosts.forEach(host=>{\n      for(let x=0; x < rjon0.hosts.length; ++x){\n        if(rjon0.hosts[x].hostname==host.hostname){\n          return Object.assign(rjon0.hosts[x], host)\n        }\n      }\n      rjon0.hosts.push(host)\n    })\n\n    return rjon0\n  }\n\n  dropRoute(route){\n    for(let i=this.AppData.rjon.routes.length-1; i >= 0; --i){\n      let iRoute = this.AppData.rjon.routes[i]\n      if(route==iRoute){\n        return this.AppData.rjon.routes.splice(i,1)\n      }\n    }\n  }\n\n  dedup(){\n    this.AppData.rjon.routes.forEach((route,i)=>{\n      for(let x=0; x < this.AppData.rjon.routes.length; ++x){\n        if(this.AppData.rjon.routes[i] == this.AppData.rjon.routes[x]){\n          continue\n        }\n\n        if(route.path == this.AppData.rjon.routes[x].path){\n          this.AppData.rjon.routes.splice(x,1)\n        }\n      }\n    })\n\n    this.AppData.rjon.hosts.forEach((host,i)=>{\n      for(let x=0; x < this.AppData.rjon.hosts.length; ++x){\n        if(this.AppData.rjon.hosts[i] == this.AppData.rjon.hosts[x]){\n          continue\n        }\n\n        if(host.hostname == this.AppData.rjon.hosts[x].hostname){\n          this.AppData.rjon.hosts.splice(x,1)\n        }\n      }\n    })\n\n    this.AppData.setSaveRjon( this.AppData.rjon )\n  }\n}"]}