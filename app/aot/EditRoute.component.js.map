{"version":3,"sources":["../src/EditRoute.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAuD;AACvD,iCAAwB;AACxB,6DAAoC;AACpC,2CAAuB;AACvB,uDAAsB;AACtB,yCAA4B;AAMzB,IAAa,SAAS;IASvB,mBAAmB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QARzB,gBAAW,GAAG,UAAU,CAAC,WAAW,CAAA;QAK1B,aAAQ,GAAG,IAAI,mBAAY,EAAE,CAAA;QAC7B,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAA;IAEX,CAAC;IAEnC,qCAAiB,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAA;QAC3C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,mBAAK,CAAC,KAAK,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CAAA;QAEpD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAC/C,EAAE,CAAA,CAAC,KAAK,IAAE,CAAC,CAAC,CAAA,CAAC;YACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAE,KAAK,EAAC,CAAC,CAAE,CAAA;QACrC,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAA;QAClC,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC;IAED,2BAAO,GAAP;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,mBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QAChD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC3B,CAAC;IAED,6BAAS,GAAT;QACE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,mBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,IAAI,EAAE,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC,CAAA;IAC3F,CAAC;IAED,iCAAa,GAAb,UAAc,MAAM;QAClB,MAAM,CAAC,IAAI,GAAG,mBAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACtB,CAAC;IAED,iCAAa,GAAb,UAAc,MAAM,EAAC,KAAK;QACxB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACpC,CAAC;IAED,+BAAW,GAAX,UAAY,IAAI,EAAC,KAAK;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC/B,CAAC;IAEH,gBAAC;AAAD,CAhDG,AAgDF,IAAA;AA7CU;IAAR,YAAK,EAAE;;wCAAa;AACZ;IAAR,YAAK,EAAE;;wCAAa;AACZ;IAAR,YAAK,EAAE;;4CAAiB;AACf;IAAT,aAAM,EAAE;;2CAAqC;AACpC;IAAT,aAAM,EAAE;;0CAAoC;AAP/B,SAAS;IAJxB,gBAAS,CAAC;QACT,QAAQ,EAAC,YAAY;QACrB,QAAQ,EAAC,uBAAS;QAClB,UAAU,EAAC,eAAO;KACnB,CAAC;qCAS0B,oBAAM;GATlB,SAAS,CAgDxB;AAhDe,8BAAS","file":"EditRoute.component.js","sourceRoot":"","sourcesContent":["import { Input, Output, Component, EventEmitter } from '@angular/core'\nimport { fxArray } from \"./prefx\"\nimport { string as editRoute } from \"./templates/edit-route.pug\"\nimport { AckApi } from \"ack-angular\"\nimport { pipes } from \"ack-angular/pipes.class\"\nimport * as rjonHelper from \"./rjonHelper\"\n\n@Component({\n  selector:'edit-route',\n  template:editRoute,\n  animations:fxArray\n}) export class EditRoute{\n  public statIconMap = rjonHelper.statIconMap\n  \n  @Input() public route\n  @Input() public hosts\n  @Input() public hostModel\n  @Output() public onChange = new EventEmitter()\n  @Output() public onClose = new EventEmitter()\n\n  constructor(public AckApi:AckApi){}\n\n  toggleRouteStatus(status){\n    this.route.status = this.route.status || []\n    this.route.status = pipes.array( this.route.status )\n\n    const index = this.route.status.indexOf(status)\n    if(index>=0){\n      this.route.status.splice( index,1 )\n    }else{\n      this.route.status.push( status )\n    }\n\n    this.onChange.emit()\n  }\n\n  addNote(){\n    this.route.notes = pipes.array(this.route.notes)\n    this.route.notes.push('')\n  }\n\n  addSample(){\n    this.route.sample = pipes.array(this.route.sample)\n    this.route.sample.push({title:null, timeout:null, statusCode:null, only:null, skip:null})\n  }\n\n  addSampleTest(sample){\n    sample.test = pipes.array(sample.test)\n    sample.test.push({})\n  }\n\n  setSampleBody(sample,value){\n    sample.request = JSON.parse(value)\n  }\n\n  setTestBody(test,value){\n    test.body = JSON.parse(value)\n  }\n\n}\n"]}