{"version":3,"sources":["../src/RjonMarkdown.component.ts"],"names":[],"mappings":";;AAAA,iCAAwB;AACxB,yCAA4B;AAC5B,6CAA4B;AAC5B,mEAAuC;AACvC,sCAAuD;AAEtD;IAAA;QACQ,gBAAW,GAAG,yBAAW,CAAA;QAGxB,aAAQ,GAAG,IAAI,mBAAY,EAAE,CAAA;IA4CvC,CAAC;IA1CC,uCAAgB,GAAhB,UAAiB,IAAI,EAAE,KAAK,EAAE,MAAM;QAClC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;IACzD,CAAC;IAED,gBAAgB;IAChB,iCAAU,GAAV,UAAW,MAAM;QACf,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IACtC,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK;QACf,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;YAChD,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAE,KAAK,CAAC,CAAA,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;gBACpB,MAAM,CAAA;YACR,CAAC;QACH,CAAC;IACH,CAAC;IAED,iCAAU,GAAV,UAAW,IAAI;QACb,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;YAC/C,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAE,IAAI,CAAC,CAAA,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;gBACpB,MAAM,CAAA;YACR,CAAC;QACH,CAAC;IACH,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAC,eAAe;oBACxB,QAAQ,EAAC,0BAAY;oBACrB,UAAU,EAAC,eAAO;iBACnB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,2BAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC1B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;KAC9B,CAAC;IACF,mBAAC;CAhDA,AAgDA,IAAA;AAhDa,oCAAY","file":"RjonMarkdown.component.js","sourceRoot":"","sourcesContent":["import { fxArray } from \"./prefx\"\nimport * as rjonHelper from \"./rjonHelper\"\nimport { statIconMap } from \"./statIconMap\"\nimport { string as rjonMarkdown } from \"./templates/rjon-markdown.pug\"\nimport { EventEmitter, Output, Input, Component } from '@angular/core'\n\n export class RjonMarkdown{\n  public statIconMap = statIconMap\n\n   public rjon\n   public onChange = new EventEmitter()\n\n  serverUrlByRoute(host, route, sample){\n    return rjonHelper.serverUrlByRoute(host, route, sample)\n  }\n\n  /* deprecated */\n  defToArray(sample){\n    return rjonHelper.defToArray(sample)\n  }\n\n  deleteRoute(route){\n    for(let x=this.rjon.routes.length-1; x >= 0; --x){\n      if(this.rjon.routes[x]==route){\n        this.rjon.routes.splice(x,1)\n        this.onChange.emit()\n        return\n      }\n    }\n  }\n\n  deleteHost(host){\n    for(let x=this.rjon.hosts.length-1; x >= 0; --x){\n      if(this.rjon.hosts[x]==host){\n        this.rjon.hosts.splice(x,1)\n        this.onChange.emit()\n        return\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector:'rjon-markdown',\n  template:rjonMarkdown,\n  animations:fxArray\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rjon': [{ type: Input },],\n'onChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}