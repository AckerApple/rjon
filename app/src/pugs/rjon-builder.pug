.flex-valign-center.child-pad-xs.child-margin-xxs
  .flex-1.pad-h([ngClass]="AppData.invalidJson?'text-danger':(AppData.invalidRjon?'text-warning':'text-success')")
    |Have an existing rjon? Paste it below&nbsp;
  .border.border-grey-4x.text-xs.radius-5.text-danger.bg-danger(*ngIf="AppData.invalidJson")
    |invalid Json
  .border.border-grey-4x.text-xs.radius-5.text-warning.bg-warning(*ngIf="AppData.invalidRjon")
    |invalid Rjon
  .border.border-grey-4x.text-xs.radius-5.text-success.bg-success(*ngIf="!AppData.invalidJson && !AppData.invalidRjon")
    |valid Rjon
  .border.border-grey-4x.text-xs.radius-5.bg-info.bg-grey-4x(*ngIf="!AppData.invalidJson && !AppData.invalidRjon")
    |routes {{ AppData.rjon.routes.length }}
  .border.border-grey-4x.text-xs.radius-5.bg-info.bg-grey-4x(*ngIf="!AppData.invalidJson && !AppData.invalidRjon")
    |hosts {{ AppData.rjon.hosts.length }}

form("(onFormAlter)"="AppData.setRjonString(AppData.rjonString)")
  -placeholder = '{"routes":[...], "hosts": [{"hostname":"localhost","port": 8080}]}'
  -attrs = {};
  //-attrs.placeholder=placeholder
  -attrs["[(ngModel)]"]="AppData.rjonString"
  -attrs["(change)"]="setSaveRjonStringAs(AppData.rjonString, AppData.rjon.name)"
  -attrs.name="AppData.rjonString"
  textarea.width-full.height-300.radius-5.border-grey-3x(placeholder=placeholder)&attributes(attrs)
  .text-center.text-sm.text-success("*ngIf"="AppData.lastSaveAt" "[@500]"="'fadeInUp'")
    |Last Saved @&nbsp;
    span("[shakeOn]"="AppData.lastSaveAt" shakeType="shake-little")
      |{{ AppData.lastSaveAt | date:'mediumTime' }}

.pad-xs
  .flex.child-margin-xxs
    .flex-1
      label save as name
      input.width-full("[(ngModel)]"="AppData.rjon.name" "(onEnterKey)"="setSaveRjonStringAs(AppData.rjonString, AppData.rjon.name)")
    div
      label &nbsp;
      input.width-full("(click)"="setSaveRjonStringAs(AppData.rjonString, AppData.rjon.name)" value="save as" type="button")
    div
      label load memory
      select.width-full("(change)"="loadByOfflineName(loadOfflineName)" "[(ngModel)]"="loadOfflineName")
        option
        option("*ngFor"="let item of (AppData.rjonSaves|keys)" "[value]"="item" "[selected]"="loadOfflineName==item") {{item}}
    div
      label &nbsp;
      input.width-full("(click)"="dedup()" value="dedup" type="button")
    div
      label &nbsp;
      input.width-full("(click)"="viewRjonMerge=!viewRjonMerge" value="merge rjons" type="button" "[ngClass]"="{'bg-energized':viewRjonMerge}")

.pad("*ngIf"="viewRjonMerge" "[@500]"="'fadeInUp'")
  h4 RJON Merge
  p Merge rjon defition into existing definition
  rjon-merge("(onMerge)"="viewRjonMerge=false")

div(*ngIf="!AppData.invalidJson && AppData.rjon")
  h4 Routes
  .flex-valign.flex-wrap.child-margin-xxs
    ng-container(*ngFor="let route of AppData.rjon.routes;let i=index")
      .pad-xs.cursor-pointer.radius-3.border.border-grey-5x.hover-bg-warning("[ngClass]"="[viewRoute==i?'width-full bg-warning':'flex-1',routeToBgClass(route)]")
        div("(click)"="viewRoute=viewRoute==i?null:i")
          span.text-xs {{ (route.method||'GET')|lowercase }}
          |&nbsp;{{ route.path }}
        .pad-top(*ngIf="viewRoute==i" "[@500]"="'fadeInUp'")
          absolute-overflow-x
            div("[innerHtml]"="route | dump | safeHtml")
